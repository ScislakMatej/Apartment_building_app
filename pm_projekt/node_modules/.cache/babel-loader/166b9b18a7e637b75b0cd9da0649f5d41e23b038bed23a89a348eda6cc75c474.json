{"ast":null,"code":"var _jsxFileName = \"/Users/matejscislak/Desktop/4roc_ZS/PM/apka/ProjektManazment/pm_projekt/src/Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport \"./Settings.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Settings() {\n  _s();\n  const user = JSON.parse(localStorage.getItem(\"user\")) || {};\n  const [currentEmail, setCurrentEmail] = useState(user.email || \"\");\n  const [formData, setFormData] = useState({\n    newEmail: \"\",\n    oldPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\"\n  });\n  const [newUser, setNewUser] = useState({\n    name: \"\",\n    lastName: \"\",\n    email: \"\",\n    apartmentNumber: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  // Načítanie údajov používateľa pri načítaní komponentu\n  useEffect(() => {\n    if (user && user.email) {\n      setCurrentEmail(user.email);\n    }\n  }, [user]);\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    window.location.href = \"/\";\n  };\n\n  // Zmena údajov pre existujúceho používateľa\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      newEmail,\n      oldPassword,\n      newPassword,\n      confirmPassword\n    } = formData;\n\n    // Logovanie dát, ktoré sa posielajú na server\n    console.log({\n      currentEmail,\n      // Kontrolujte, či je tento údaj správny\n      oldPassword,\n      // Kontrolujte, či je toto staré heslo správne\n      newEmail,\n      // Skontrolujte, či je nový email správny\n      newPassword // Skontrolujte, či je nové heslo správne\n    });\n    if (!oldPassword) {\n      alert(\"Staré heslo je potrebné na uloženie zmien!\");\n      return;\n    }\n    if (!newEmail && !newPassword) {\n      alert(\"Musíte zadať nový e-mail alebo nové heslo.\");\n      return;\n    }\n    if (newPassword && !confirmPassword || !newPassword && confirmPassword) {\n      alert(\"Musíte potvrdiť heslo.\");\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      alert(\"Heslá sa nezhodujú!\");\n      return;\n    }\n    try {\n      const response = await fetch('/api/user/update', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json' // Ensure content type is set correctly\n        },\n        body: JSON.stringify({\n          currentEmail,\n          // The current email of the logged-in user\n          oldPassword,\n          newEmail,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert(data.message);\n        // Update the UI if needed, such as updating the `currentEmail`\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error(\"Error while updating user details:\", error);\n      alert(\"Chyba pri aktualizácii údajov.\");\n    }\n    setFormData({\n      newEmail: \"\",\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\"\n    });\n  };\n\n  // Pridanie nového používateľa\n  const handleNewUserChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewUser(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleAddUser = async e => {\n    e.preventDefault();\n    const {\n      name,\n      lastName,\n      email,\n      apartmentNumber,\n      password,\n      confirmPassword\n    } = newUser;\n    if (!name || !lastName || !email || !apartmentNumber || !password || !confirmPassword) {\n      alert(\"Všetky polia sú povinné!\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      alert(\"Heslá sa nezhodujú!\");\n      return;\n    }\n    try {\n      const response = await fetch('/api/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json' // Ensure content type is set correctly\n        },\n        body: JSON.stringify({\n          name,\n          lastName,\n          email,\n          apartmentNumber,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert(data.message);\n        setNewUser({\n          name: \"\",\n          lastName: \"\",\n          email: \"\",\n          apartmentNumber: \"\",\n          password: \"\",\n          confirmPassword: \"\"\n        });\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error(\"Error while adding new user:\", error);\n      alert(\"Chyba pri pridávaní nového používateľa.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-page\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        user: user,\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-user-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Prida\\u0165 nov\\xE9ho pou\\u017E\\xEDvate\\u013Ea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"new-user-form\",\n            onSubmit: handleAddUser,\n            children: [[{\n              label: \"Meno\",\n              name: \"name\"\n            }, {\n              label: \"Priezvisko\",\n              name: \"lastName\"\n            }, {\n              label: \"E-mail\",\n              name: \"email\"\n            }, {\n              label: \"Číslo bytu\",\n              name: \"apartmentNumber\"\n            }, {\n              label: \"Heslo\",\n              name: \"password\"\n            }, {\n              label: \"Potvrdenie hesla\",\n              name: \"confirmPassword\"\n            }].map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label-text\",\n                children: [field.label, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: field.name.includes(\"password\") ? \"password\" : \"text\",\n                name: field.name,\n                value: newUser[field.name],\n                onChange: handleNewUserChange,\n                className: \"input-field\",\n                placeholder: `Zadajte ${field.label.toLowerCase()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this)]\n            }, field.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"save-btn\",\n              children: \"Prida\\u0165\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n_s(Settings, \"1vgsGz8dfusCYP6WfC7q9nr1mhg=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useEffect","Header","Sidebar","jsxDEV","_jsxDEV","Settings","_s","user","JSON","parse","localStorage","getItem","currentEmail","setCurrentEmail","email","formData","setFormData","newEmail","oldPassword","newPassword","confirmPassword","newUser","setNewUser","name","lastName","apartmentNumber","password","handleLogout","removeItem","window","location","href","handleInputChange","e","value","target","prev","handleSubmit","preventDefault","console","log","alert","response","fetch","method","headers","body","stringify","data","json","success","message","error","handleNewUserChange","handleAddUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogout","onSubmit","label","map","field","type","includes","onChange","placeholder","toLowerCase","_c","$RefreshReg$"],"sources":["/Users/matejscislak/Desktop/4roc_ZS/PM/apka/ProjektManazment/pm_projekt/src/Settings.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport \"./Settings.css\";\n\nfunction Settings() {\n  const user = JSON.parse(localStorage.getItem(\"user\")) || {};\n  const [currentEmail, setCurrentEmail] = useState(user.email || \"\");\n  const [formData, setFormData] = useState({\n    newEmail: \"\",\n    oldPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\",\n  });\n  const [newUser, setNewUser] = useState({\n    name: \"\",\n    lastName: \"\",\n    email: \"\",\n    apartmentNumber: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  // Načítanie údajov používateľa pri načítaní komponentu\n  useEffect(() => {\n    if (user && user.email) {\n      setCurrentEmail(user.email);\n    }\n  }, [user]);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    window.location.href = \"/\";\n  };\n\n  // Zmena údajov pre existujúceho používateľa\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const { newEmail, oldPassword, newPassword, confirmPassword } = formData;\n\n    // Logovanie dát, ktoré sa posielajú na server\n    console.log({\n      currentEmail,    // Kontrolujte, či je tento údaj správny\n      oldPassword,     // Kontrolujte, či je toto staré heslo správne\n      newEmail,        // Skontrolujte, či je nový email správny\n      newPassword,     // Skontrolujte, či je nové heslo správne\n    });\n\n    if (!oldPassword) {\n      alert(\"Staré heslo je potrebné na uloženie zmien!\");\n      return;\n    }\n\n    if (!newEmail && !newPassword) {\n      alert(\"Musíte zadať nový e-mail alebo nové heslo.\");\n      return;\n    }\n\n    if ((newPassword && !confirmPassword) || (!newPassword && confirmPassword)) {\n      alert(\"Musíte potvrdiť heslo.\");\n      return;\n    }\n\n    if (newPassword !== confirmPassword) {\n      alert(\"Heslá sa nezhodujú!\");\n      return;\n    }\n\n    try {\n      const response = await fetch('/api/user/update', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json', // Ensure content type is set correctly\n        },\n        body: JSON.stringify({\n          currentEmail,    // The current email of the logged-in user\n          oldPassword,\n          newEmail,\n          newPassword,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        alert(data.message);\n        // Update the UI if needed, such as updating the `currentEmail`\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error(\"Error while updating user details:\", error);\n      alert(\"Chyba pri aktualizácii údajov.\");\n    }\n\n    setFormData({\n      newEmail: \"\",\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n    });\n  };\n\n  // Pridanie nového používateľa\n  const handleNewUserChange = (e) => {\n    const { name, value } = e.target;\n    setNewUser((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleAddUser = async (e) => {\n    e.preventDefault();\n\n    const {\n      name,\n      lastName,\n      email,\n      apartmentNumber,\n      password,\n      confirmPassword,\n    } = newUser;\n\n    if (!name || !lastName || !email || !apartmentNumber || !password || !confirmPassword) {\n      alert(\"Všetky polia sú povinné!\");\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"Heslá sa nezhodujú!\");\n      return;\n    }\n\n    try {\n      const response = await fetch('/api/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json', // Ensure content type is set correctly\n        },\n        body: JSON.stringify({\n          name,\n          lastName,\n          email,\n          apartmentNumber,\n          password,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        alert(data.message);\n        setNewUser({\n          name: \"\",\n          lastName: \"\",\n          email: \"\",\n          apartmentNumber: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n        });\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error(\"Error while adding new user:\", error);\n      alert(\"Chyba pri pridávaní nového používateľa.\");\n    }\n  };\n\n  return (\n    <div className=\"settings-page\">\n      <Sidebar />\n      <div className=\"main-content\">\n        <Header user={user} onLogout={handleLogout} />\n        <div className=\"settings-content\">\n          {/*\n          <div className=\"settings-box\">\n            <h1>Nastavenia</h1>\n            <form className=\"settings-form\" onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <div className=\"label-wrapper\">\n                  <label className=\"label-text\">Aktuálny e-mail:</label>\n                  <div className=\"current-email\">{currentEmail}</div>\n                </div>\n                <div className=\"label-wrapper\">\n                  <label className=\"label-text new-email\">Nový e-mail:</label>\n                  <input\n                    type=\"email\"\n                    name=\"newEmail\"\n                    value={formData.newEmail}\n                    onChange={handleInputChange}\n                    className=\"input-field\"\n                    placeholder=\"Zadajte nový e-mail\"\n                  />\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"label-wrapper\">\n                  <label className=\"label-text\">Nové heslo:</label>\n                  <input\n                    type=\"password\"\n                    name=\"newPassword\"\n                    value={formData.newPassword}\n                    onChange={handleInputChange}\n                    className=\"input-field\"\n                    placeholder=\"Zadajte nové heslo\"\n                  />\n                </div>\n                <div className=\"label-wrapper\">\n                  <label className=\"label-text\">Potvrdenie hesla:</label>\n                  <input\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    value={formData.confirmPassword}\n                    onChange={handleInputChange}\n                    className=\"input-field\"\n                    placeholder=\"Zopakujte nové heslo\"\n                  />\n                </div>\n              </div>\n              <div className=\"label-wrapper\">\n                <label className=\"label-text\">Staré heslo:</label>\n                <input\n                  type=\"password\"\n                  name=\"oldPassword\"\n                  value={formData.oldPassword}\n                  onChange={handleInputChange}\n                  className=\"input-field\"\n                  placeholder=\"Zadajte staré heslo\"\n                />\n              </div>\n              <button type=\"submit\" className=\"save-btn\">\n                Uložiť\n              </button>\n            </form>\n          </div>\n            */}\n\n          <div className=\"new-user-box\">\n            <h1>Pridať nového používateľa</h1>\n            <form className=\"new-user-form\" onSubmit={handleAddUser}>\n              {[\n                { label: \"Meno\", name: \"name\" },\n                { label: \"Priezvisko\", name: \"lastName\" },\n                { label: \"E-mail\", name: \"email\" },\n                { label: \"Číslo bytu\", name: \"apartmentNumber\" },\n                { label: \"Heslo\", name: \"password\" },\n                { label: \"Potvrdenie hesla\", name: \"confirmPassword\" },\n              ].map((field) => (\n                <div key={field.name} className=\"label-wrapper\">\n                  <label className=\"label-text\">{field.label}:</label>\n                  <input\n                    type={field.name.includes(\"password\") ? \"password\" : \"text\"}\n                    name={field.name}\n                    value={newUser[field.name]}\n                    onChange={handleNewUserChange}\n                    className=\"input-field\"\n                    placeholder={`Zadajte ${field.label.toLowerCase()}`}\n                  />\n                </div>\n              ))}\n              <button type=\"submit\" className=\"save-btn\">\n                Pridať\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Settings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}