{"ast":null,"code":"var _jsxFileName = \"/Users/matejscislak/Desktop/4roc_ZS/PM/apka/ProjektManazment/pm_projekt/src/GraphBox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Scatter } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport * as XLSX from \"xlsx\"; // Načítanie knižnice pre prácu so súbormi Excel\nimport grafFile from './graf.xlsx'; // Import Excel súboru\n\n// Registrácia potrebných komponentov pre Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend);\nconst GraphBox = () => {\n  _s();\n  var _chartData$datasets$;\n  const [chartData, setChartData] = useState({});\n\n  // Funkcia na načítanie a spracovanie predvoleného Excel súboru\n  const loadDefaultFile = async () => {\n    try {\n      // Fetch the Excel file from the server\n      const response = await fetch(grafFile);\n      const data = await response.arrayBuffer();\n      const workbook = XLSX.read(data, {\n        type: \"array\"\n      });\n      const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet);\n\n      // Spracovanie dát: extrahovanie mesiacov a stavov na účte\n      const months = jsonData.slice(1, 13).map(row => row[\"Mesiac\"]);\n      const accountBalance = jsonData.slice(1, 13).map(row => row[\"Stav na ucte\"]);\n\n      // Nastavenie dát pre bodový graf\n      const chartData = {\n        datasets: [{\n          label: 'Stav na účte',\n          data: months.map((month, index) => ({\n            x: month,\n            y: accountBalance[index]\n          })),\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 2\n        }]\n      };\n      setChartData(chartData); // Nastavenie dát do stavu\n    } catch (error) {\n      console.error(\"Chyba pri načítaní Excel súboru:\", error);\n    }\n  };\n\n  // Načítanie predvoleného súboru pri mountnutí komponentu\n  useEffect(() => {\n    loadDefaultFile();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-box\",\n    children: chartData.datasets && /*#__PURE__*/_jsxDEV(Scatter, {\n      data: chartData // Predanie dát do grafu\n      ,\n      options: {\n        responsive: true,\n        scales: {\n          x: {\n            type: 'category',\n            labels: (_chartData$datasets$ = chartData.datasets[0]) === null || _chartData$datasets$ === void 0 ? void 0 : _chartData$datasets$.data.map(dataPoint => dataPoint.x),\n            title: {\n              display: true,\n              text: 'Mesiac'\n            }\n          },\n          y: {\n            min: 0,\n            max: 2000,\n            title: {\n              display: true,\n              text: 'Stav na účte'\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            position: 'top'\n          }\n          /*\n          title: {\n            display: true,\n            text: 'Mesiac vs Stav na účte',\n          },\n          */\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphBox, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n_c = GraphBox;\nexport default GraphBox;\nvar _c;\n$RefreshReg$(_c, \"GraphBox\");","map":{"version":3,"names":["React","useEffect","useState","Scatter","Chart","ChartJS","CategoryScale","LinearScale","PointElement","Title","Tooltip","Legend","XLSX","grafFile","jsxDEV","_jsxDEV","register","GraphBox","_s","_chartData$datasets$","chartData","setChartData","loadDefaultFile","response","fetch","data","arrayBuffer","workbook","read","type","worksheet","Sheets","SheetNames","jsonData","utils","sheet_to_json","months","slice","map","row","accountBalance","datasets","label","month","index","x","y","backgroundColor","borderColor","borderWidth","error","console","className","children","options","responsive","scales","labels","dataPoint","title","display","text","min","max","plugins","legend","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/matejscislak/Desktop/4roc_ZS/PM/apka/ProjektManazment/pm_projekt/src/GraphBox.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Scatter } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport * as XLSX from \"xlsx\";  // Načítanie knižnice pre prácu so súbormi Excel\nimport grafFile from './graf.xlsx'; // Import Excel súboru\n\n// Registrácia potrebných komponentov pre Chart.js\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst GraphBox = () => {\n  const [chartData, setChartData] = useState({});\n\n  // Funkcia na načítanie a spracovanie predvoleného Excel súboru\n  const loadDefaultFile = async () => {\n    try {\n      // Fetch the Excel file from the server\n      const response = await fetch(grafFile);\n      const data = await response.arrayBuffer();\n      \n      const workbook = XLSX.read(data, { type: \"array\" });\n      const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet);\n\n      // Spracovanie dát: extrahovanie mesiacov a stavov na účte\n      const months = jsonData.slice(1, 13).map(row => row[\"Mesiac\"]);\n      const accountBalance = jsonData.slice(1, 13).map(row => row[\"Stav na ucte\"]);\n\n      // Nastavenie dát pre bodový graf\n      const chartData = {\n        datasets: [\n          {\n            label: 'Stav na účte',\n            data: months.map((month, index) => ({\n              x: month,\n              y: accountBalance[index],\n            })),\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 2,\n          }\n        ],\n      };\n\n      setChartData(chartData); // Nastavenie dát do stavu\n    } catch (error) {\n      console.error(\"Chyba pri načítaní Excel súboru:\", error);\n    }\n  };\n\n  // Načítanie predvoleného súboru pri mountnutí komponentu\n  useEffect(() => {\n    loadDefaultFile();\n  }, []);\n\n  return (\n    <div className=\"graph-box\">\n      {/*\n      <h3>Stav účtu</h3>\n      */}\n      \n      {/* Scatter graf */}\n      {chartData.datasets && (\n        <Scatter\n          data={chartData} // Predanie dát do grafu\n          options={{\n            responsive: true,\n            scales: {\n              x: {\n                type: 'category',\n                labels: chartData.datasets[0]?.data.map((dataPoint) => dataPoint.x),\n                title: {\n                  display: true,\n                  text: 'Mesiac',\n                },\n              },\n              y: {\n                min: 0,\n                max: 2000,\n                \n                title: {\n                  display: true,\n                  text: 'Stav na účte',\n                },\n              },\n            },\n            plugins: {\n              legend: {\n                position: 'top',\n              },\n              /*\n              title: {\n                display: true,\n                text: 'Mesiac vs Stav na účte',\n              },\n              */\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default GraphBox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}