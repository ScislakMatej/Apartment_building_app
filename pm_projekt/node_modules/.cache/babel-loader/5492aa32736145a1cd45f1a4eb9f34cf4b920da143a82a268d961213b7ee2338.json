{"ast":null,"code":"var _jsxFileName = \"/Users/martinsarissky/Documents/TUKE/PM_projekt/pm_projekt/src/ProtectedRoute.js\";\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\n// Protected Route Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  const isAuthenticated = localStorage.getItem(\"isAuthenticated\");\n  if (!isAuthenticated) {\n    // If not authenticated, redirect to the login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If authenticated, allow access to the page\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","isAuthenticated","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/martinsarissky/Documents/TUKE/PM_projekt/pm_projekt/src/ProtectedRoute.js"],"sourcesContent":["import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\n// Protected Route Component\nconst ProtectedRoute = ({ children }) => {\n  const isAuthenticated = localStorage.getItem(\"isAuthenticated\");\n\n  if (!isAuthenticated) {\n    // If not authenticated, redirect to the login page\n    return <Navigate to=\"/\" />;\n  }\n\n  // If authenticated, allow access to the page\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;EAE/D,IAAI,CAACF,eAAe,EAAE;IACpB;IACA,oBAAOH,OAAA,CAACF,QAAQ;MAACQ,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;;EAEA;EACA,OAAOR,QAAQ;AACjB,CAAC;AAACS,EAAA,GAVIV,cAAc;AAYpB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}