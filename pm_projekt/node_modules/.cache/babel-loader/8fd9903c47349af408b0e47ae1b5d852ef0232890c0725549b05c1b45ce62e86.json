{"ast":null,"code":"var _jsxFileName = \"/Users/matejscislak/Desktop/4roc_ZS/PM/project/pm_projekt/ProjektManazment/pm_projekt/src/GraphBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Scatter } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport * as XLSX from \"xlsx\"; // Načítanie knižnice pre prácu so súbormi Excel\n\n// Registrácia potrebných komponentov pre Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend);\nconst GraphBox = () => {\n  _s();\n  const [chartData, setChartData] = useState({});\n\n  // Funkcia na načítanie a spracovanie Excel súboru\n  const handleFileUpload = e => {\n    const file = e.target.files[0]; // Získame súbor\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = event => {\n      const data = event.target.result;\n      const workbook = XLSX.read(data, {\n        type: \"binary\"\n      });\n\n      // Predpokladáme, že údaje sú v prvom hárku\n      const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet);\n\n      // Spracovanie dát: extrahovanie mesiacov a stavov na účte\n      const months = jsonData.map(row => row[\"Mesiac\"]);\n      const accountBalance = jsonData.map(row => row[\"Stav na ucte\"]);\n\n      // Prevod mesiacov na číselné hodnoty (môžete to prispôsobiť podľa formátu mesiacov)\n      const monthNumbers = months.map((month, index) => index + 1); // Pre každý mesiac priradíme číslo\n\n      // Nastavenie dát pre bodový graf\n      const chartData = {\n        datasets: [{\n          label: 'Stav na účte',\n          data: monthNumbers.map((month, index) => ({\n            x: month,\n            // X-ová os: mesiac\n            y: accountBalance[index] // Y-ová os: stav na účte\n          })),\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          // Farba bodov\n          borderColor: 'rgba(75, 192, 192, 1)',\n          // Okraj bodov\n          borderWidth: 1 // Hrúbka okraja\n        }]\n      };\n      setChartData(chartData); // Nastavenie dát do stavu\n    };\n\n    // Čítanie súboru ako binárny\n    reader.readAsBinaryString(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Graf: Stav \\xFA\\u010Dtu pod\\u013Ea mesiaca\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx, .xls\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), chartData.datasets && /*#__PURE__*/_jsxDEV(Scatter, {\n      data: chartData // Predanie dát do grafu\n      ,\n      options: {\n        responsive: true,\n        scales: {\n          x: {\n            beginAtZero: true,\n            // Začiatok X-ovej osi na nule\n            title: {\n              display: true,\n              text: 'Mesiac' // Názov X-ovej osi\n            }\n          },\n          y: {\n            min: 0,\n            // Min hodnota Y-ovej osi (začína od 0)\n            max: 2000,\n            // Max hodnota Y-ovej osi\n            title: {\n              display: true,\n              text: 'Stav na účte' // Názov Y-ovej osi\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            position: 'top' // Pozícia legendy\n          },\n          title: {\n            display: true,\n            text: 'Mesiac vs Stav na účte' // Titulok grafu\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphBox, \"ZZ3KsH5zB02Cvyp0Ek1FFR0obTc=\");\n_c = GraphBox;\nexport default GraphBox;\nvar _c;\n$RefreshReg$(_c, \"GraphBox\");","map":{"version":3,"names":["React","useState","Scatter","Chart","ChartJS","CategoryScale","LinearScale","PointElement","Title","Tooltip","Legend","XLSX","jsxDEV","_jsxDEV","register","GraphBox","_s","chartData","setChartData","handleFileUpload","e","file","target","files","reader","FileReader","onload","event","data","result","workbook","read","type","worksheet","Sheets","SheetNames","jsonData","utils","sheet_to_json","months","map","row","accountBalance","monthNumbers","month","index","datasets","label","x","y","backgroundColor","borderColor","borderWidth","readAsBinaryString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","options","responsive","scales","beginAtZero","title","display","text","min","max","plugins","legend","position","_c","$RefreshReg$"],"sources":["/Users/matejscislak/Desktop/4roc_ZS/PM/project/pm_projekt/ProjektManazment/pm_projekt/src/GraphBox.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Scatter } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport * as XLSX from \"xlsx\";  // Načítanie knižnice pre prácu so súbormi Excel\n\n// Registrácia potrebných komponentov pre Chart.js\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst GraphBox = () => {\n  const [chartData, setChartData] = useState({});\n\n  // Funkcia na načítanie a spracovanie Excel súboru\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];  // Získame súbor\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const data = event.target.result;\n      const workbook = XLSX.read(data, { type: \"binary\" });\n\n      // Predpokladáme, že údaje sú v prvom hárku\n      const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet);\n\n      // Spracovanie dát: extrahovanie mesiacov a stavov na účte\n      const months = jsonData.map(row => row[\"Mesiac\"]);\n      const accountBalance = jsonData.map(row => row[\"Stav na ucte\"]);\n\n      // Prevod mesiacov na číselné hodnoty (môžete to prispôsobiť podľa formátu mesiacov)\n      const monthNumbers = months.map((month, index) => index + 1);  // Pre každý mesiac priradíme číslo\n\n      // Nastavenie dát pre bodový graf\n      const chartData = {\n        datasets: [\n          {\n            label: 'Stav na účte',\n            data: monthNumbers.map((month, index) => ({\n              x: month,  // X-ová os: mesiac\n              y: accountBalance[index],  // Y-ová os: stav na účte\n            })),\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',  // Farba bodov\n            borderColor: 'rgba(75, 192, 192, 1)',  // Okraj bodov\n            borderWidth: 1,  // Hrúbka okraja\n          }\n        ],\n      };\n\n      setChartData(chartData);  // Nastavenie dát do stavu\n    };\n\n    // Čítanie súboru ako binárny\n    reader.readAsBinaryString(file);\n  };\n\n  return (\n    <div className=\"graph-box\">\n      <h3>Graf: Stav účtu podľa mesiaca</h3>\n      \n      {/* Input pre nahratie Excel súboru */}\n      <input \n        type=\"file\" \n        accept=\".xlsx, .xls\" \n        onChange={handleFileUpload}\n      />\n\n      {/* Scatter graf */}\n      {chartData.datasets && (\n        <Scatter\n          data={chartData}  // Predanie dát do grafu\n          options={{\n            responsive: true,\n            scales: {\n              x: {\n                beginAtZero: true,  // Začiatok X-ovej osi na nule\n                title: {\n                  display: true,\n                  text: 'Mesiac',  // Názov X-ovej osi\n                },\n              },\n              y: {\n                min: 0,  // Min hodnota Y-ovej osi (začína od 0)\n                max: 2000,  // Max hodnota Y-ovej osi\n                title: {\n                  display: true,\n                  text: 'Stav na účte',  // Názov Y-ovej osi\n                },\n              },\n            },\n            plugins: {\n              legend: {\n                position: 'top',  // Pozícia legendy\n              },\n              title: {\n                display: true,\n                text: 'Mesiac vs Stav na účte',  // Titulok grafu\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default GraphBox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}