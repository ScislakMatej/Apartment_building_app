{"ast":null,"code":"var _jsxFileName = \"/home/tobias/projektovy/pm_projekt/src/GraphBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Scatter } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport * as XLSX from \"xlsx\"; // Načítanie knižnice pre prácu so súbormi Excel\n\n// Registrácia potrebných komponentov pre Chart.js\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend);\nconst GraphBox = () => {\n  _s();\n  var _chartData$datasets$;\n  const [chartData, setChartData] = useState({});\n  const [loading, setLoading] = useState(true); // Stav načítania súboru\n\n  // Azure Blob Storage konfigurácia\n  const containerName = \"expenses-graph\"; // Názov kontajnera\n  const blobName = \"graf.xlsx\"; // Názov súboru na Azure Storage\n  const accountName = \"pmprojectstorage\"; // Názov vášho účtu Azure\n\n  // Zadajte SAS URL generovanú v Azure Portal alebo cez SDK\n  const sasUrl = `https://${accountName}.blob.core.windows.net/${containerName}/${blobName}?se=2026-01-01T00%3A00%3A00Z&sp=r&sv=2022-11-02&sr=b&sig=qdO04qfRakp7CquSm87LXC%2BiUwzVxbi9qu80j8vJ6zc%3D`;\n  useEffect(() => {\n    const fetchDataFromAzure = async () => {\n      try {\n        setLoading(true);\n\n        // Načítanie Excel súboru pomocou SAS URL\n        const response = await fetch(sasUrl);\n        const arrayBuffer = await response.arrayBuffer(); // Získanie dát zo SAS URL ako arrayBuffer\n\n        // Spracovanie Excel súboru\n        const workbook = XLSX.read(arrayBuffer, {\n          type: \"array\"\n        });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet);\n\n        // Spracovanie dát: extrahovanie mesiacov a stavov na účte\n        const months = jsonData.slice(1, 13).map(row => row[\"Mesiac\"]);\n        const accountBalance = jsonData.slice(1, 13).map(row => row[\"Stav na ucte\"]);\n\n        // Nastavenie dát pre bodový graf\n        const chartData = {\n          datasets: [{\n            label: 'Stav na účte',\n            data: months.map((month, index) => ({\n              x: month,\n              y: accountBalance[index]\n            })),\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        };\n        setChartData(chartData); // Nastavenie dát do stavu\n      } catch (error) {\n        console.error(\"Chyba pri načítavaní súboru z Azure:\", error);\n      } finally {\n        setLoading(false); // Nastavíme loading na false, keď sa načítavanie dokončí\n      }\n    };\n    fetchDataFromAzure(); // Načítanie dát pri prvom renderovaní komponentu\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Graf: Stav \\xFA\\u010Dtu pod\\u013Ea mesiaca\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Na\\u010D\\xEDtavam d\\xE1ta...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) // Zobraziť text počas načítavania dát\n    : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: chartData.datasets && /*#__PURE__*/_jsxDEV(Scatter, {\n        data: chartData // Predanie dát do grafu\n        ,\n        options: {\n          responsive: true,\n          scales: {\n            x: {\n              type: 'category',\n              // Nastavenie typu osi X ako kategóriu\n              labels: (_chartData$datasets$ = chartData.datasets[0]) === null || _chartData$datasets$ === void 0 ? void 0 : _chartData$datasets$.data.map(dataPoint => dataPoint.x),\n              // Použijeme hodnoty mesiacov ako štítky X-ovej osi\n              title: {\n                display: true,\n                text: 'Mesiac' // Názov X-ovej osi\n              }\n            },\n            y: {\n              min: 0,\n              // Min hodnota Y-ovej osi (začína od 0)\n              max: 5000,\n              // Max hodnota Y-ovej osi\n              title: {\n                display: true,\n                text: 'Stav na účte' // Názov Y-ovej osi\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              position: 'top' // Pozícia legendy\n            },\n            title: {\n              display: true,\n              text: 'Mesiac vs Stav na účte' // Titulok grafu\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphBox, \"brzxmrYfkhx/oScAUmuHUa40fUE=\");\n_c = GraphBox;\nexport default GraphBox;\nvar _c;\n$RefreshReg$(_c, \"GraphBox\");","map":{"version":3,"names":["React","useState","useEffect","Scatter","Chart","ChartJS","CategoryScale","LinearScale","PointElement","Title","Tooltip","Legend","XLSX","jsxDEV","_jsxDEV","Fragment","_Fragment","register","GraphBox","_s","_chartData$datasets$","chartData","setChartData","loading","setLoading","containerName","blobName","accountName","sasUrl","fetchDataFromAzure","response","fetch","arrayBuffer","workbook","read","type","worksheet","Sheets","SheetNames","jsonData","utils","sheet_to_json","months","slice","map","row","accountBalance","datasets","label","data","month","index","x","y","backgroundColor","borderColor","borderWidth","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","scales","labels","dataPoint","title","display","text","min","max","plugins","legend","position","_c","$RefreshReg$"],"sources":["/home/tobias/projektovy/pm_projekt/src/GraphBox.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Scatter } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport * as XLSX from \"xlsx\";  // Načítanie knižnice pre prácu so súbormi Excel\n\n// Registrácia potrebných komponentov pre Chart.js\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst GraphBox = () => {\n  const [chartData, setChartData] = useState({});\n  const [loading, setLoading] = useState(true); // Stav načítania súboru\n\n  // Azure Blob Storage konfigurácia\n  const containerName = \"expenses-graph\"; // Názov kontajnera\n  const blobName = \"graf.xlsx\"; // Názov súboru na Azure Storage\n  const accountName = \"pmprojectstorage\"; // Názov vášho účtu Azure\n\n  // Zadajte SAS URL generovanú v Azure Portal alebo cez SDK\n  const sasUrl = `https://${accountName}.blob.core.windows.net/${containerName}/${blobName}?se=2026-01-01T00%3A00%3A00Z&sp=r&sv=2022-11-02&sr=b&sig=qdO04qfRakp7CquSm87LXC%2BiUwzVxbi9qu80j8vJ6zc%3D`;\n\n  useEffect(() => {\n    const fetchDataFromAzure = async () => {\n      try {\n        setLoading(true);\n\n        // Načítanie Excel súboru pomocou SAS URL\n        const response = await fetch(sasUrl);\n        const arrayBuffer = await response.arrayBuffer();  // Získanie dát zo SAS URL ako arrayBuffer\n\n        // Spracovanie Excel súboru\n        const workbook = XLSX.read(arrayBuffer, { type: \"array\" });\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet);\n\n        // Spracovanie dát: extrahovanie mesiacov a stavov na účte\n        const months = jsonData.slice(1, 13).map(row => row[\"Mesiac\"]);\n        const accountBalance = jsonData.slice(1, 13).map(row => row[\"Stav na ucte\"]);\n\n        // Nastavenie dát pre bodový graf\n        const chartData = {\n          datasets: [\n            {\n              label: 'Stav na účte',\n              data: months.map((month, index) => ({\n                x: month,\n                y: accountBalance[index],\n              })),\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 1,\n            }\n          ],\n        };\n\n        setChartData(chartData);  // Nastavenie dát do stavu\n      } catch (error) {\n        console.error(\"Chyba pri načítavaní súboru z Azure:\", error);\n      } finally {\n        setLoading(false); // Nastavíme loading na false, keď sa načítavanie dokončí\n      }\n    };\n\n    fetchDataFromAzure(); // Načítanie dát pri prvom renderovaní komponentu\n  }, []);\n\n  return (\n    <div className=\"graph-box\">\n      <h3>Graf: Stav účtu podľa mesiaca</h3>\n\n      {loading ? (\n        <p>Načítavam dáta...</p> // Zobraziť text počas načítavania dát\n      ) : (\n        <>\n          {/* Scatter graf */}\n          {chartData.datasets && (\n            <Scatter\n              data={chartData}  // Predanie dát do grafu\n              options={{\n                responsive: true,\n                scales: {\n                  x: {\n                    type: 'category',  // Nastavenie typu osi X ako kategóriu\n                    labels: chartData.datasets[0]?.data.map((dataPoint) => dataPoint.x), // Použijeme hodnoty mesiacov ako štítky X-ovej osi\n                    title: {\n                      display: true,\n                      text: 'Mesiac',  // Názov X-ovej osi\n                    },\n                  },\n                  y: {\n                    min: 0,  // Min hodnota Y-ovej osi (začína od 0)\n                    max: 5000,  // Max hodnota Y-ovej osi\n                    title: {\n                      display: true,\n                      text: 'Stav na účte',  // Názov Y-ovej osi\n                    },\n                  },\n                },\n                plugins: {\n                  legend: {\n                    position: 'top',  // Pozícia legendy\n                  },\n                  title: {\n                    display: true,\n                    text: 'Mesiac vs Stav na účte',  // Titulok grafu\n                  },\n                },\n              }}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default GraphBox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}